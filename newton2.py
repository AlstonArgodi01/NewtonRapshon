# -*- coding: utf-8 -*-
"""newton2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1N7YhhyGtT3124XBxcwJdOtH2GlwPJxXI
"""

#koefisien pertama  = ka
#pangkat pertama    = a
#operator pertama   = ap
#pangkat kedua      = b
#koefiesien kedua   = kb
#operator kedua     = bp
#konstanta          = k
#x0                 = batas atas
#e                  = toleransi error
#N                  = batas bawah

def f(x):
    return ka**x**a + kb*x+k
def g(x):
    return ka*a*x*(a-1) + kb*b*(kb-1)
def h(x):
    return ka*x**a + kb*x-k
def i(x):
    return ka*a*x**(a-1) + kb*b**(b-1)
def j(x):
    return ka*x**a - kb*x+k
def k(x):
    return ka*a*x**(a-1) - kb*b**(b-1)
def l(X):
    return ka*x**a - kb*b+k


def newtonRaphson(x0,e,N):
    print('metode newton raphson')
    step = 1
    flag = 1
    condition = True
    while condition:
        if i(x0) == 0.0:
            print('dibagi dengan 0')
            break
        
        x1 = x0 - h(x0)/i(x0)
        print('persamaaan-%d, x1 = %0.6f dan f(x1) = %0.6f' % (step, x1, h(x1)))
        x0 = x1
        step = step + 1
        
        if step > N:
            flag = 0
            break
        
        condition = abs(f(x1)) > e
    
    if flag==1:
        print('\n: %0.8f' % x1)
    else:
        print('\ntidak konvergen')

# masukan
a   =float(input("masukan pangkat pertama A: "))
ka  =float(input("masukan koefisien pertama A: "))
ap  =input("masukan operator pertama A :")
if(ap=='+'):
  b  = float(input("masukan pangkat kedua B : "))
  kb = float(input("masukan koefiesien kedua B :"))
  bp = input("masukan operator keduan B :")
  if(bp=='+'):
      k   = float(input("masukan kosntanta :"))
      x0  = input('batas atas :')
      e   = input('error :')
      N   = input('batas bawah :')


# konversi ke float
x0 = float(x0)
e = float(e)

# Konversi ke interge
N = int(N)

newtonRaphson(x0,e,N)